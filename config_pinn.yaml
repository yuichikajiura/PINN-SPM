method: pinn # pinn or nn

# Load/Save
load_nn: True  # Load pre-trained NN or not
suffix_nn: 'cell1_data1234'  # Suffix of filename for pre-trained NN
load_pinn: False  # Load pre-trained PINN or not
suffix_pinn: ''  # Suffix of filename for pre-trained PINN
save: True  # Save PINN after training or not
suffix_save: 'two_params_ID'  # Suffix of filename for PINN to be saved

# Network
batches: 1  # Number of training batches
layer_lstm: 1  # Number of LSTM layer
layer_fc: 1  # Number of FC layer
hidden_lstm: 64  # Number of hidden nodes in LSTM layer
hidden_fc: 600  # Number of hidden nodes in FC layer
epochs: 100000  # Number of training epochs
lrate: 0.001  # Learning rate
decay_step: 5000 # The number of steps after which the learning rate will decay
decay_rate: 0.9999 # The rate learning rate decays per epoch
activation: tanh  # Activation function (tanh or relu)
seed: 1234  # Seed for random number generator in torch and numpy
k: 100   # number of data points in inputs [i[t]...i[t+k], vt[t]...vt[t+k]] to predict initial cond z[t] and vc[t]
h: 1   # Step size for integration (an integer 1 or greater, need to be a common divider of k)
integ_type: 1   # 0 for RK4 (default), 1 for Naive

# Data
train_data_type:  # UDDS, FUDS, BJDST, Charge, Charge2,  US06_Extended
  - "UDDS"
  - "FUDS"
  - "BJDST"
  - "Charge"
  - "Charge2"
val_data_type:  # UDDS, FUDS, BJDST, Charge, Charge2, US06_Extended
  - "US06_Extended"
std_current: 38  # standard deviation of current data in Ampere (UDDS)
std_voltage: 0.16   # standard deviation of voltage data in Volt (UDDS)
noise: 0.03   # the magnitude of white noise to standard deviation of data

# Battery
n_r: 20   # number of discrete points along with the particle's radius including surface but excluding r=0
OneC: 29.601016543579075   # [Ah/m^2]
max_Crate: 4
V_upper: 4.05
V_lower: 2.5
cell_known: 1  # 1 for fresh cell, 2 for degraded cell
cell_target: 2  # 1 for fresh cell, 2 for degraded cell
p_search_upper: 2 # upper bound for param search in ratio to original value
p_search_lower: 0.5 # upper bound for param search in ratio to original value
p_targets: # True if include as a target parameter to be estimated
  - True # nLi
  - True # R_f_n
  - False # k_n
  - False # k_p
  - False # D_s_n
  - False # D_s_p