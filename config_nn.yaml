method: nn # pinn or nn

# Load/Save
load: False  # Load pre-trained NN or not
save: False  # Save NN after training or not
suffix: ''  # Suffix of filename for NN to be loaded/saved

# Network
batches: 1  # Number of training batches
layer_lstm: 1  # Number of LSTM layer
layer_fc: 1  # Number of FC layer
hidden_lstm: 64  # Number of hidden nodes in LSTM layer
hidden_fc: 600  # Number of hidden nodes in FC layer
epochs: 100000  # Number of training epochs
lrate: 0.0003  # Learning rate
activation: tanh  # Activation function (tanh or relu)
seed: 1234  # Seed for random number generator in torch and numpy
k: 100   # number of data points in inputs [i[t]...i[t+k], vt[t]...vt[t+k]] to predict initial cond z[t] and vc[t]
h: 1   # Step size for integration (an integer 1 or greater, need to be a common divider of k)
integ_type: 1   # 0 for RK4 (default), 1 for Naive

# Data
train_data_type:  # 1:UDDS, 2:FUDS, 3:CC, 4:CC2, 5:US06(Extended)
  - 1
  - 2
  - 3
  - 4
val_data_type:  # 1:UDDS, 2:FUDS, 3:CC, 4:CC2, 5:US06(Extended)
  - 5
std_current: 38  # standard deviation of current data in Ampere (UDDS)
std_voltage: 0.16   # standard deviation of voltage data in Volt (UDDS)
noise: 0.03   # the magnitude of white noise to standard deviation of data

# Battery
n_r: 20   # number of discrete points along with the particle's radius including surface but excluding r=0
OneC: 29.601016543579075   # [Ah/m^2]
max_Crate: 4
V_upper: 4.05
V_lower: 2.5
cell_known: 1  # 1 for fresh cell, 2 for degraded cell
cell_target: 1  # 1 for fresh cell, 2 for degraded cell
p_targets: # True if include as a target parameter to be estimated
  - False # nLi
  - False # R_f_n
  - False # k_n
  - False # k_p
  - False # D_s_n
  - False # D_s_p